<body>
<div id="chartContainer" style="height: 370px; width: 100%;"></div>
<input type="text" name="symbol" id="symbol">
<select type="choice" name="interval" id="interval">
    <option value="5min">5 minutes</option>
    <option value="15min">15 minutes</option>
    <option value="30min">30 minutes</option>
    <option value="60min">60 minutes</option>
</select>
<button onclick="dailyStocks()" class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Show Stocks</button>
<script>
function dailyStocks () {
const date = new Date();

let day = date.getDate();
let month = date.getMonth() + 1;
let year = date.getFullYear();
let currentDate = `${day}-${month}-${year}`;

var symbol = document.getElementById("symbol").value;
var interval = document.getElementById("interval").value;
// replace the "demo" apikey below with your own key from https://www.alphavantage.co/support/#api-key
var API_URL = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol='+symbol+'&interval='+interval+'&apikey=GPC9UGIE9X6VAHJ0';
fetch(API_URL)
.then(function(response) {
    return response.json();
})
.then(function(data) {
    console.log(data);
    var stockData = data['Time Series ('+interval+')'];
    var dataPoints = [];    
    for (var key in stockData) {
        if (stockData.hasOwnProperty(key)) {
            dataPoints.push({
                x: new Date(key),
                y: parseFloat(stockData[key]['4. close'])
            });
        }
    }
    console.log(dataPoints);
    var options = {
        animationEnabled: true,
        title:{
            text: "Stock Price of " +symbol+ " - Daily Graph ("+currentDate+")"
        },
        axisX:{
            valueFormatString: "DD MMM",
            crosshair: {
                enabled: true,
                snapToDataPoint: true
            }
        },
        axisY: {
            title: "Closing Price (in USD)",
            valueFormatString: "$##0.00",
            crosshair: {
                enabled: true,
                snapToDataPoint: true,
                labelFormatter: function(e) {
                    return "$" + CanvasJS.formatNumber(e.value, "##0.00");
                }
            }
        },
        data: [{
            type: "area",
            xValueFormatString: "DD MMM",
            yValueFormatString: "$##0.00",
            dataPoints: dataPoints
        }]
    };
    $("#chartContainer").CanvasJSChart(options);
});
}
</script>
<script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script src="https://canvasjs.com/assets/script/jquery.canvasjs.min.js"></script>
<script src="https://cdn.tailwindcss.com"></script>
</body>
